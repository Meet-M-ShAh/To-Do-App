[{"D:\\Projects\\to-do-app\\to-do\\src\\index.js":"1","D:\\Projects\\to-do-app\\to-do\\src\\App.js":"2","D:\\Projects\\to-do-app\\to-do\\src\\ListItems.js":"3","D:\\Projects\\to-do-app\\to-do\\src\\reportWebVitals.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":1896,"mtime":1608029554496,"results":"7","hashOfConfig":"6"},{"size":987,"mtime":1608030188353,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"jgf0m3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"D:\\Projects\\to-do-app\\to-do\\src\\index.js",[],["20","21"],"D:\\Projects\\to-do-app\\to-do\\src\\App.js",["22"],"import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items:[],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !== \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item =>{\n      if(item.key===key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter task\" value={this.state.currentItem.text} onChange={this.handleInput} />\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <ListItems items = {this.state.items} deleteItem = {this.deleteItem} setUpdate = {this.setUpdate}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\Projects\\to-do-app\\to-do\\src\\ListItems.js",[],"D:\\Projects\\to-do-app\\to-do\\src\\reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":59,"column":20,"nodeType":"29","messageId":"30","endLine":59,"endColumn":22},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]